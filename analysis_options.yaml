# This file configures the static analysis results for your project (errors,
# warnings, and lints).
#
# This enables the 'recommended' set of lints from `package:lints`.
# This set helps identify many issues that may lead to problems when running
# or consuming Dart code, and enforces writing Dart using a single, idiomatic
# style and format.
#
# If you want a smaller set of lints you can change this to specify
# 'package:lints/core.yaml'. These are just the most critical lints
# (the recommended set includes the core lints).
# The core lints are also what is used by pub.dev for scoring packages.

include: package:lints/recommended.yaml

# Uncomment the following section to specify additional rules.

linter:
  rules:
    always_use_package_imports: true
    avoid_print: true
    prefer_single_quotes: true
    always_specify_types: true
    annotate_overrides: true
    avoid_empty_else: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_void: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_types_as_parameter_names: true
    await_only_futures: true
    avoid_web_libraries_in_flutter: true
    camel_case_types: true
    collection_methods_unrelated_type: true
    constant_identifier_names: true
    curly_braces_in_flow_control_structures: true
    dangling_library_doc_comments: true
    depend_on_referenced_packages: true
    empty_catches: true
    empty_constructor_bodies: true
    empty_statements: true
    enable_null_safety: true
    exhaustive_cases: true
    file_names: true
    implicit_call_tearoffs: true
    invalid_runtime_check_with_js_interop_types: true
    library_annotations: true
    package_names: true
    no_duplicate_case_values: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    no_logic_in_create_state: true
    no_wildcard_variable_uses: true
    non_constant_identifier_names: true
    null_check_on_nullable_type_parameter: true
    null_closures: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors_in_immutables: true
    prefer_contains: true
    prefer_function_declarations_over_variables: true
    require_trailing_commas: true
    prefer_generic_function_type_aliases: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_inlined_adds: true
    prefer_typing_uninitialized_variables: true
    strict_top_level_inference: true
    unawaited_futures: true
    unintended_html_in_doc_comment: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_late: true
    unnecessary_overrides: true
    unnecessary_string_escapes: true
    unnecessary_this: true
    unnecessary_to_list_in_spreads: true
    use_function_type_syntax_for_parameters: true
    use_string_in_part_of_directives: true
    use_super_parameters: true
    void_checks: true
    valid_regexps: true